service:
  name: import-service-be-33
  profile: pesonal

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: dev

  environment:
    S3_BUCKET_NAME: az-import-bucket-be
    S3_REGION: ${self:provider.region}
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic

  iamRoleStatements:
    - Action:
        - "s3:ListBucket"
      Effect: "Allow"
      Resource:
        - arn:aws:s3:::${self:provider.environment.S3_BUCKET_NAME}
    - Action:
        - "s3:*"
      Effect: "Allow"
      Resource:
        - arn:aws:s3:::${self:provider.environment.S3_BUCKET_NAME}/*
    - Action:
        - "sqs:*"
      Effect: "Allow"
      Resource:
        - Fn::GetAtt: [ SQSQueue, Arn ]
    - Action:
        - "sns:*"
      Effect: "Allow"
      Resource:
        Ref: SNSTopic

plugins:
  - serverless-webpack

custom:
  webpack:
    includeModules:
      forceInclude:
        - csv-parser

functions:
  importProductsFile:
    handler: handlers/import-products-file.handler
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true

  importFileParser:
    handler: handlers/import-file-parser.handler
    events:
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: handlers/catalog-batch-process.handler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt: [ SQSQueue, Arn ]
resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: rs-product-queue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: rs-product-topic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: hdg_lo@mail.ru
        Protocol: email
        TopicArn:
          Ref: SNSTopic
